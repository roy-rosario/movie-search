{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\royro\\\\Desktop\\\\react-github\\\\muvi\\\\src\\\\MovieContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MovieCard from './MovieCard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieContainer() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [movieList, setMovieList] = useState([]);\n\n  async function searchMovies(e) {\n    e.preventDefault();\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=644de5e9d44295560e561228927bfa2a&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    if (query) {\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        setMovieList(data.results);\n        console.log(movieList);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        fluid: true,\n        children: movieList.filter(movie => movie.poster_path).map(movie => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            lg: 4,\n            xl: 3,\n            xxl: 2,\n            children: /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: movie\n            }, movie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieContainer, \"kRaeaUzkOuhkIkaQxxJXqEtli4M=\");\n\n_c = MovieContainer;\nexport default MovieContainer;\n{\n  /* <header className=\"w-text\">\r\n  <span>powered by</span>\r\n     <a href=\"https://www.themoviedb.org/?language=en-US\"><img className=\"logo\" src='https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg' alt=\"TMBD's logo\"/>\r\n  </a>\r\n  </header>\r\n  <div  className=\"w-text\">\r\n  <h1>Movie Searcher</h1>\r\n  </div>\r\n  <form className=\"form\" onSubmit ={searchMovies}>\r\n  <label \r\n  className=\"small w-text\" \r\n  htmlFor=\"query\"\r\n  >\r\n     Search Movies\r\n  </label>\r\n  <input  \r\n  class = 'input'\r\n  type = \"text\" \r\n  name= \"query\" \r\n  value ={query} \r\n  onChange= {(e) =>{\r\n         const {value} = e.target\r\n         setQuery(value)\r\n     }}\r\n  placeholder ='i.e. Jurassic Park, The Matrix, etc.'\r\n  />\r\n  <button className = 'button'>Search</button>\r\n  </form> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieContainer\");","map":{"version":3,"sources":["C:/Users/royro/Desktop/react-github/muvi/src/MovieContainer.js"],"names":["React","useState","MovieCard","Container","Row","Col","MovieContainer","query","setQuery","movieList","setMovieList","searchMovies","e","preventDefault","url","res","fetch","data","json","results","console","log","err","error","filter","movie","poster_path","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;;AAEA,SAASC,cAAT,GAAyB;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,iBAAeU,YAAf,CAA4BC,CAA5B,EAA8B;AAEtBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,GAAG,GAAI,2GAA0GP,KAAM,6BAA7H;;AAEA,QAAGA,KAAH,EAAS;AACD,UAAG;AACC,cAAMQ,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,cAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAR,QAAAA,YAAY,CAACO,IAAI,CAACE,OAAN,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACH,OALD,CAKC,OAAMa,GAAN,EAAU;AACPF,QAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACH;AACJ;AAER;;AAEL,sBACI,QAAC,SAAD;AAAA,2BAEI,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAM,QAAA,KAAK,MAAX;AAAA,kBACCb,SAAS,CAACe,MAAV,CAAiBC,KAAK,IAAIA,KAAK,CAACC,WAAhC,EACIC,GADJ,CACQF,KAAK,IAAI;AACV,8BACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,EAAE,EAAE,CAAjB;AAAoB,YAAA,EAAE,EAAE,CAAxB;AAA2B,YAAA,EAAE,EAAE,CAA/B;AAAkC,YAAA,GAAG,EAAE,CAAvC;AAAA,mCACI,QAAC,SAAD;AAA4B,cAAA,KAAK,EAAGA;AAApC,eAAkBA,KAAK,CAACG,EAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAPJ;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA1CQtB,c;;KAAAA,c;AA4CT,eAAeA,cAAf;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAW","sourcesContent":["import React, {useState} from 'react'\r\nimport MovieCard from './MovieCard'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction MovieContainer(){\r\n\r\n    const [query, setQuery] = useState(\"\")\r\n    const [movieList, setMovieList] = useState([])\r\n\r\n    async function searchMovies(e){\r\n\r\n            e.preventDefault()\r\n            \r\n            const url = `https://api.themoviedb.org/3/search/movie?api_key=644de5e9d44295560e561228927bfa2a&language=en-US&query=${query}&page=1&include_adult=false`\r\n            \r\n            if(query){\r\n                    try{\r\n                        const res = await fetch(url)\r\n                        const data = await res.json()\r\n                        setMovieList(data.results)\r\n                        console.log(movieList)\r\n                    }catch(err){\r\n                        console.error(err)\r\n                    }\r\n                }\r\n        \r\n        }\r\n\r\n    return(\r\n        <Container >  \r\n           \r\n            <Container >\r\n                <Row  fluid>\r\n                {movieList.filter(movie => movie.poster_path)\r\n                    .map(movie => {\r\n                        return(\r\n                            <Col sm={12} md={6} lg={4} xl={3} xxl={2} >\r\n                                <MovieCard key = {movie.id} movie ={movie}/>\r\n                            </Col>\r\n                        )\r\n                    })\r\n                }\r\n                </Row>\r\n            </Container>\r\n        </Container>\r\n    )    \r\n}\r\n\r\nexport default MovieContainer\r\n\r\n{/* <header className=\"w-text\">\r\n<span>powered by</span>\r\n    <a href=\"https://www.themoviedb.org/?language=en-US\"><img className=\"logo\" src='https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg' alt=\"TMBD's logo\"/>\r\n</a>\r\n</header>\r\n<div  className=\"w-text\">\r\n<h1>Movie Searcher</h1>\r\n</div>\r\n<form className=\"form\" onSubmit ={searchMovies}>\r\n<label \r\nclassName=\"small w-text\" \r\nhtmlFor=\"query\"\r\n>\r\n    Search Movies\r\n</label>\r\n<input  \r\nclass = 'input'\r\ntype = \"text\" \r\nname= \"query\" \r\nvalue ={query} \r\nonChange= {(e) =>{\r\n        const {value} = e.target\r\n        setQuery(value)\r\n    }}\r\nplaceholder ='i.e. Jurassic Park, The Matrix, etc.'\r\n/>\r\n<button className = 'button'>Search</button>\r\n</form> */}"]},"metadata":{},"sourceType":"module"}